[General]
#debug-on-errors = true
sim-time-limit = 1000s

output-scalar-file-append = true
#network = inet.examples.adhoc.pruebasGateWay.Grid_mesh3
network = inet.examples.manetrouting.pruebasP2P2.redSimple
num-rngs = 2
cmdenv-status-frequency = 2000s

cmdenv-express-mode = true
tkenv-plugin-path = ../../../Etc/plugins
#tkenv-default-run=1

description = "Aodv Simple test"

**.globalARP = true

**.fuzzyFisFile = "P2P.fis"


**.wlan[0].mac[*].multiMac = true

**.wlan[0].numChannels = 1

**.wlan[0].mgmt.ETXEstimate = true
**.modoP2P= "concavo"

#ETT, ETX parameters
**.ETTInterval = 0s
**.ETXInterval = 2s
**.ETXMeasureInterval = 20s
**.ETXjitter = uniform(-0.1s,0.1s)
**.startEtx @unit(s) = uniform(0s,5s)
**.ETXHysteresis = 0.5s


**.wlan[0].radio[0].channelNumber = 0
**.wlan[0].radio[1].channelNumber = 2
**.wlan[0].radio[2].channelNumber = 3
**.wlan[0].radio[3].channelNumber = 4
**.wlan[0].radio[4].channelNumber = 5
**.wlan[0].radio[5].channelNumber = 6

**.annotations.draw = true

**.vector-recording = false

#*.numHosts=20
#**.numHostsUpper=50
**.numHostsLower=40
#*.numBasic=35
*.numBasic=0
**.debug = true
**.coreDebug = false
**.wlan[0].radio.channelNumber = 1

#**.fixhost[*].mobilityType = "inet.mobility.models.RandomWPMobility"

# mobility
#**.host*.mobilityType = "inet.mobility.RestrictedConstSpeedMobility"

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMaxX = 800m
**.constraintAreaMaxY = 800m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

**.initFromDisplayString = false


**.fixhost[*].mobility.speed = uniform(1mps, 2mps)
**.fixhost[*].mobility.waitTime = uniform(1s,120s)

**.mobilityType = "StaticGridMobility"
**.mobility.numHosts = 64
**.mobility.marginX = 80m
**.mobility.marginY = 80m
**.wlanMesh.hasLocator = true

#**.host*.mobility.updateInterval = 0.1
**.fixhost[*].mobility.updateInterval = 0.1s

# udp apps (on)
# general parameters

#configurator
**.fixhostA[*].autoconfigurator.interfaces = "wlanMesh wlan0"


**.fixhost[*].autoconfigurator.interfaces = "wlanMesh"
**.fixhost[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost[*].autoconfigurator.addressBaseList = "192.168.1.0"
**.fixhost[*].autoconfigurator.addressMask = "255.255.255.0"

**.fixhostA[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhostA[*].autoconfigurator.addressBaseList = "192.168.1.0 192.168.1.0"
**.fixhostA[*].autoconfigurator.addressMask = "255.255.255.0 255.255.255.0"

**.udpApp[0].destAddresses=""
**.udpApp[1].destAddresses=""



# ip settings
**.routingFile = ""
**.ip.procDelay = 10us
# **.IPForward=false

# ARP configuration
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s
**.arp.globalARP = true
#**.networklayer.proxyARP = true  # Host's is hardwired "false"

# manet routing
**.manetrouting.manetmanager.routingProtocol=""
#**.routingProtocol.use-default=yes


# nic settings
**.wlan*.mgmt.frameCapacity = 10
#**.wlan.mgmt.Willingness = 3
#**.wlan.mgmt.Hello_ival = 2
#**.wlan.mgmt.Tc_ival = 5
#**.wlan.mgmt.Mid_ival = 5
#**.wlan.mgmt.use_mac = false


**.hasLocator = true

# nic settings
**.mac.EDCA = false
**.wlan*.mac.address = "auto"
**.wlan*.mac.maxQueueSize = 14
**.wlan*.mac.rtsThresholdBytes = 3000B
**.wlan*.bitrate = 54Mbps
**.wlan*.mac.basicBitrate = 6Mbps  # 24Mbps
**.wlan*.mac.retryLimit = 3 #************************************************num of retrasmission before link break!!!!!
**.wlan*.mac.cwMinData = 31
**.wlan*.mac.cwMinMulticast = 31
**.wlan*.opMode = "g" # 802.11g
**.wlan*.mac.slotTime = 9us #
**.wlan*.mac.AIFSN = 2 #DIFS
**.wlan*.radio.transmitterPower=2.0mW
**.wlan*.radio.pathLossAlpha=2 ##################################################################
**.wlan*.radio.snirThreshold = 4dB  # in dB
**.wlan*.radio.thermalNoise=-110dBm
**.wlan*.radio.sensitivity=-90dBm
#**.wlan*.radio.sensitivity=-77dBm
**.wlan*.radio.channelModel = "RAYLEIGH" #1/2  rayleigh/awgn
#MY COMMENT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#**.wlan[*].radio.berTableFile="/home/luca/per_table_80211g_Trivellato.dat"
**.wlan*.radio.berTableFile="per_table_80211g_Trivellato.dat"


**.channelsToScan = "1"

# nic settings
**.mac[*].EDCA = false
**.wlan*.mac[*].address = "auto"
**.wlan*.mac[*].maxQueueSize = 14
**.wlan*.mac[*].rtsThresholdBytes = 3000B
**.wlan*.mac[*].bitrate = 54Mbps
**.wlan*.mac[*].basicBitrate = 6Mbps  # 24Mbps
**.wlan*.mac[*].retryLimit = 3 #************************************************num of retrasmission before link break!!!!!
**.wlan*.mac[*].cwMinData = 31
**.wlan*.mac[*].cwMinMulticast = 31
**.wlan*.mac[*].opMode = "g"
**.wlan*.mac[*].slotTime = 9us #
**.wlan*.mac[*].AIFSN = 2 #DIFS
**.wlan*.radio[*].transmitterPower=2.0mW
**.wlan*.radio[*].pathLossAlpha=2 ##################################################################
**.wlan*.radio[*].snirThreshold = 4dB  # in dB
**.wlan*.radio[*].bitrate=54Mbps
**.wlan*.radio[*].thermalNoise=-110dBm
**.wlan*.radio[*].sensitivity=-82dBm
#**.wlan*.radio.sensitivity=-77dBm
**.wlan*.radio[*].phyOpMode = "g" #1/2  802.11b/802.11g-only

#MY COMMENT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#**.wlan[*].radio.berTableFile="/home/luca/per_table_80211g_Trivellato.dat"
**.wlan*.radio[*].berTableFile="per_table_80211g_Trivellato.dat"

# channel physical parameters
*.channelControl.carrierFrequency = 2.4GHz
*.channelControl.pMax = 2.0mW
*.channelControl.sat = -110dBm
*.channelControl.alpha = 2
*.channelControl.numChannels = 6

*.channelControl.propagationModel="TwoRayGroundModel"
**.drawCoverage=true

#**.use-default=yes

# proccesing delay in the routing protocol, avoid syncronization
**.broadcastDelay = uniform(0s,0.01s) # 10 mseconds 
**.unicastDelay = uniform(0s,0.005s)

#/ parameters : DYMOUM
#**.no_path_acc_ = false
**.no_path_acc_ = true
**.reissue_rreq_ = false
**.s_bit_ = false
**.hello_ival_ = 0
**.MaxPktSec = 20 #// 10
**.promiscuous = false
#**.NetDiameter = 10
**.NetDiameter = 30
**.RouteTimeOut = 3000
**.RouteDeleteTimeOut = 3000*5 #//5*RouteTimeOut
**.RREQWaitTime = 1000
**.RREQTries =3
**.noRouteBehaviour=1

#// Olsr
**.Willingness=3
**.Hello_ival=2s
**.Tc_ival=5s
**.Mid_ival=5s
**.use_mac =0 #1
**.Mpr_algorithm =  1
**.routing_algorithm =   1
**.Link_quality = 2
**.Fish_eye = false
**.Tc_redundancy =    3
**.Link_delay = true #//default false
**.C_alpha=0.2

**.mgmt.useProactive = true
**.mgmt.useReactive = false
####
####
####
####
# configuracion espec√≠fica

repeat = 10

# udp apps (on)
**fixhost*.udpApp[0].typename = "UDPBasicP2P"
**.fixhost*.numUdpApps = 1

**.udpApp[0].localPort = 1234
**.udpApp[0].destPort = 1234

**.udpApp[*].startTime = uniform(60s,260s)
**.udpApp[*].waitTime = uniform(1s,2s)

**.udpApp[0].totalSegments = 10
**.udpApp[0].segmentSize = 100000B
**.udpApp[0].maxPacketSize = 1000B
 
**.udpApp[0].initNodesRand = true
**.udpApp[0].numInitialSegments = 0

[Config conFuzzy5]
**.obstacles = xmldoc("obstaculos5.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.forceMinHop = true
output-scalar-file = ${resultdir}/modif1conFuzzy5.sca
**.fuzzy = true

[Config soloFuzzy5]
**.obstacles = xmldoc("obstaculos5.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.forceMinHop = false
output-scalar-file = ${resultdir}/modif2soloFuzzy5.sca
**.fuzzy = true

[Config minhop5]
**.obstacles = xmldoc("obstaculos5.xml")
**.numInitNodesRand = 1
#### traffic data rate
output-scalar-file = ${resultdir}/param1obstminHop5.sca

[Config aleatorio5]
**.obstacles = xmldoc("obstaculos5.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.selectRand = true
output-scalar-file = ${resultdir}/param1obstaleatorio5.sca


[Config conFuzzy10]
**.obstacles = xmldoc("obstaculos10.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.forceMinHop = true
output-scalar-file = ${resultdir}/modif1conFuzzy10.sca
**.fuzzy = true

[Config soloFuzzy10]
**.obstacles = xmldoc("obstaculos10.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.forceMinHop = false
output-scalar-file = ${resultdir}/modif2soloFuzzy10.sca
**.fuzzy = true

[Config minhop10]
**.obstacles = xmldoc("obstaculos10.xml")
**.numInitNodesRand = 1
#### traffic data rate
output-scalar-file = ${resultdir}/param1obstminHop10.sca

[Config aleatorio10]
**.obstacles = xmldoc("obstaculos10.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.selectRand = true
output-scalar-file = ${resultdir}/param1obstaleatorio10.sca



[Config conFuzzy20]
**.obstacles = xmldoc("obstaculos20.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.forceMinHop = true
output-scalar-file = ${resultdir}/modif2conFuzzy20.sca
**.fuzzy = true

[Config soloFuzzy20]
**.obstacles = xmldoc("obstaculos20.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.forceMinHop = false
output-scalar-file = ${resultdir}/modif2soloFuzzy20.sca
**.fuzzy = true

[Config minhop20]
**.obstacles = xmldoc("obstaculos20.xml")
**.numInitNodesRand = 1
#### traffic data rate
output-scalar-file = ${resultdir}/param1obstsminHop20.sca

[Config aleatorio20]
**.obstacles = xmldoc("obstaculos20.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.selectRand = true
output-scalar-file = ${resultdir}/param1obstaleatorio20.sca



[Config conFuzzy30]
**.obstacles = xmldoc("obstaculos30.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.forceMinHop = true
output-scalar-file = ${resultdir}/modif1conFuzzy30.sca
**.fuzzy = true

[Config soloFuzzy30]
**.obstacles = xmldoc("obstaculos30.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.forceMinHop = false
output-scalar-file = ${resultdir}/modif2soloFuzzy30.sca
**.fuzzy = true

[Config minhop30]
**.obstacles = xmldoc("obstaculos30.xml")
**.numInitNodesRand = 1
#### traffic data rate
output-scalar-file = ${resultdir}/param1obstminHop30.sca

[Config aleatorio30]
**.obstacles = xmldoc("obstaculos30.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.selectRand = true
output-scalar-file = ${resultdir}/param1obstaleatorio30.sca



[Config conFuzzy40]
**.obstacles = xmldoc("obstaculos40.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.forceMinHop = true
output-scalar-file = ${resultdir}/modif1conFuzzy40.sca
**.fuzzy = true

[Config soloFuzzy40]
**.obstacles = xmldoc("obstaculos40.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.forceMinHop = false
output-scalar-file = ${resultdir}/modif2soloFuzzy40.sca
**.fuzzy = true

[Config minhop40]
**.obstacles = xmldoc("obstaculos40.xml")
**.numInitNodesRand = 1
#### traffic data rate
output-scalar-file = ${resultdir}/param1obstminHop40.sca

[Config aleatorio40]
**.obstacles = xmldoc("obstaculos40.xml")
**.numInitNodesRand = 1
#### traffic data rate
**.selectRand = true
output-scalar-file = ${resultdir}/param1obstaleatorio40.sca


