[General]
debug-on-errors = true
#record-eventlog = true
tkenv-plugin-path = ../../../etc/plugins
num-rngs = 3
repeat = 5


**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2
# mobility
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 170m
**.constraintAreaMaxY = 170m
**.constraintAreaMaxZ = 0m
**.initFromDisplayString = false
**.changeInterval = truncnormal(2s, 0.5s)
**.changeAngleBy = normal(0deg, 30deg)
**.speed = truncnormal(20mps, 8mps)
**.updateInterval = 100ms

network = TestDmaMac

##########################################################
# 			Extra Parametrers       	      		     #	
##########################################################
# ping app (host[0] pinged by others)
**.numHosts = 25
**.numApps = 0
**.sinkAddress = 1
**.maxRadioSwitchDelay = 0.001792s #CC2420 delay 
**.mobilityType = "StationaryMobility"
**.alertDelayMax = 70 #

##########################################################
# 			PHY Parametrers   	    	      		     #	
##########################################################
**.bitrate = 250000bps
#frequent hopping configuration
#**.frequentHopping = true

# this is new paramters for the channel hopping evaluation on the go to change the noise which is from the noise.xml file
#*.radioMediumType = "APSKScalarRadioMedium"
#*.radioMedium.backgroundNoise.power = -110dBm
#*.radioMedium.backgroundNoiseType = "ChannelMapBackgroundNoise"
#**.radioType = "APSKScalarRadio"

##########################################################
# 			MAC Paramters 		    	    		     #	
##########################################################
**.mac.headerLength = 20b
**.mac.xmlFileTransientN = xmldoc("XML/25NodesTdma/transientSuperFrameTdma.xml")
**.mac.neighborData = xmldoc("XML/25NodesTdma/neighborData.xml")	
**.mac.slotDuration = 0.01s		# duration of one slot is 10ms
**.mac.ackTimeout = 0.001s		# ACK timeout is 1ms 
**.mac.dataTimeout = 0.003s		# DATA timeout is 3ms 
**.mac.stats = true
**.mac.stateProbability = 10
**.mac.alertProbability = 12	#1.2% per node out of 1000
**.mac.xmlFileSteadyN = xmldoc("XML/25NodesTdma/steadySuperFrame2xTdma.xml") 
**.mac.numSlotsSteady = 180	
**.wlan.mac.numSlotsTransient = 90
**.hasStatus = true
#(important to be same as in header file ReachableAddress can cause segmentation fault) 
**.mac.maxNodes = 10 # same as number of nodes required for initialization of routetables 
**.mac.maxChildren = 3 #
##Mac type Hybrid (TDMA-CSMA as 0) or only TDMA as 1   
**.wlan.mac.macTypeInput = 1 
**.wlan.mac.alertTimeout = 0.003s

##########################################################
# 			Engery States 		    	    		     #	
##########################################################
**.energyStorageType = "SimpleEpEnergyStorage"
**.energyConsumerType = "StateBasedEpEnergyConsumer"
**.energyStorage.nominalCapacity = 1000J
**.energyStorage.nodeShutdownCapacity = 0J
**.energyStorage.nodeStartCapacity = 1 * this.nominalCapacity
**.energyStorage.initialCapacity = this.nominalCapacity

##########################################################
# 				Buffer depending on Children		     #	
##########################################################
#Used because same queue is used for both data and actuator data forwarding.
#Not controlling application during steady will make the queue full.
#Given that re-transmission is not designed those slots will be used to send these extra packets
#Which is not right since we assume no packet failure thus re-transmission will not be used
#One packet each for children (sensors only) and a packet for itself
#This is entirely based on the node topology
**.node[0].wlan.mac.queueLength = 6	#Node 1			
**.node[1].wlan.mac.queueLength = 6	#Node 2	
**.node[2].wlan.mac.queueLength = 7	#Node 3		
**.node[3].wlan.mac.queueLength = 2	#Node 4
**.node[4].wlan.mac.queueLength = 1	#Node 5	
**.node[5].wlan.mac.queueLength = 3	#Node 6	
**.node[6].wlan.mac.queueLength = 1	#Node 7	
**.node[7].wlan.mac.queueLength = 3	#Node 8	
**.node[8].wlan.mac.queueLength = 2	#Node 9	
**.node[9].wlan.mac.queueLength = 2	#Node 10	
**.node[10].wlan.mac.queueLength = 1	#Node 11	
**.node[11].wlan.mac.queueLength = 4	#Node 12	
**.node[12].wlan.mac.queueLength = 1	#Node 13	
**.node[13].wlan.mac.queueLength = 1	#Node 14	
**.node[14].wlan.mac.queueLength = 1	#Node 15	
**.node[15].wlan.mac.queueLength = 1	#Node 16	
**.node[16].wlan.mac.queueLength = 1	#Node 17	
**.node[17].wlan.mac.queueLength = 1	#Node 18	
**.node[18].wlan.mac.queueLength = 1	#Node 19	
**.node[19].wlan.mac.queueLength = 1	#Node 20	
**.node[20].wlan.mac.queueLength = 1	#Node 21	
**.node[21].wlan.mac.queueLength = 1	#Node 22	
**.node[22].wlan.mac.queueLength = 1	#Node 23	
**.node[23].wlan.mac.queueLength = 1	#Node 24
**.node[24].wlan.mac.queueLength = 1	#Node 25

**.node[25].wlan.mac.queueLength = 1	#Node 26


##########################################################
# 				Has Sensor Child or not				     #	
##########################################################
## Should not wait for alerts if no sensor chidlren
## By default all have children
**.wlan.mac.hasSensorChildren = true
## Overriding for nodes that do not have.			
**.node[4].wlan.mac.hasSensorChild  = false		#node 5  (Actuator)
**.node[6].wlan.mac.hasSensorChild  = false		#node 7  (Actuator)
**.node[12].wlan.mac.hasSensorChild = false		#node 13
**.node[13].wlan.mac.hasSensorChild = false		#node 14 (Actuator)
**.node[14].wlan.mac.hasSensorChild = false		#node 15 
**.node[15].wlan.mac.hasSensorChild = false		#node 16
**.node[16].wlan.mac.hasSensorChild = false		#node 17 
**.node[17].wlan.mac.hasSensorChild = false		#node 18 
**.node[18].wlan.mac.hasSensorChild = false		#node 19 
**.node[19].wlan.mac.hasSensorChild = false		#node 20 (Actuator)
**.node[20].wlan.mac.hasSensorChild = false		#node 21 (Actuator)
**.node[21].wlan.mac.hasSensorChild = false		#node 22 
**.node[22].wlan.mac.hasSensorChild = false		#node 23 (Actuator)	
**.node[23].wlan.mac.hasSensorChild = false		#node 24
**.node[24].wlan.mac.hasSensorChild = false		#node 25 

**.node[25].wlan.mac.hasSensorChild = false		#node 26 

			
**.sink.wlan.mac.queueLength = 6		#No of actuators packets.
##########################################################
# 				Actuator definiition 				     #
##########################################################
**.node[4].wlan.mac.isActuator  = true		#Node 5	
**.node[6].wlan.mac.isActuator  = true		#Node 7		
**.node[13].wlan.mac.isActuator = true		#Node 14		
**.node[19].wlan.mac.isActuator = true		#Node 20	
**.node[20].wlan.mac.isActuator = true		#Node 21
**.node[22].wlan.mac.isActuator = true		#Node 23

##########################################################
#		 			Vector Recording	  			     #	
##########################################################
**.battery.ConsumedVector.vector-recording = false #true

##########################################################
#	 	         Static node positions     		   		 #	
##########################################################
#From the postionPlan diagram
**.sink.mobility.initialX = 86m
**.sink.mobility.initialY = 29m
#1
**.node[0].mobility.initialX = 52m
**.node[0].mobility.initialY = 39m

#2
**.node[1].mobility.initialX = 89m
**.node[1].mobility.initialY = 67m

#3
**.node[2].mobility.initialX = 126m
**.node[2].mobility.initialY = 41m


#Child of node[0]#1 (4,5,6)
#4
**.node[3].mobility.initialX = 30m
**.node[3].mobility.initialY = 23m

#5
**.node[4].mobility.initialX = 30m
**.node[4].mobility.initialY = 40m

#6
**.node[5].mobility.initialX = 30m
**.node[5].mobility.initialY = 57m


#Child of node[3]#4 (13,14)
#13
**.node[12].mobility.initialX = 18m
**.node[12].mobility.initialY = 9m

#14
**.node[13].mobility.initialX = 10m
**.node[13].mobility.initialY = 26m


#Child of node[5]#6 (15,16)
#15
**.node[14].mobility.initialX = 10m
**.node[14].mobility.initialY = 63m

#16
**.node[15].mobility.initialX = 24m
**.node[15].mobility.initialY = 79m


#Child of node[1]#2 (7,8,9)
#7
**.node[6].mobility.initialX = 59m
**.node[6].mobility.initialY = 76m

#8
**.node[7].mobility.initialX = 77m
**.node[7].mobility.initialY = 82m

#9
**.node[8].mobility.initialX = 111m
**.node[8].mobility.initialY = 75m


#Child of node[7]#8 (17,14)
#17
**.node[16].mobility.initialX = 58m
**.node[16].mobility.initialY = 94m

#18
**.node[17].mobility.initialX = 84m
**.node[17].mobility.initialY = 101m


#Child of node[8]#9 (17,14)
#19
**.node[18].mobility.initialX = 105m
**.node[18].mobility.initialY = 94m

#20
**.node[19].mobility.initialX = 127m
**.node[19].mobility.initialY = 89m


#Child of node[2]#3 (10,11,12)
#10
**.node[9].mobility.initialX = 134m
**.node[9].mobility.initialY = 57m

#11
**.node[10].mobility.initialX = 144m
**.node[10].mobility.initialY = 41m

#12
**.node[11].mobility.initialX = 126m
**.node[11].mobility.initialY = 24m


#Child of node[9]#10 (21,22)
#21
**.node[20].mobility.initialX = 146m
**.node[20].mobility.initialY = 76m

#22
**.node[21].mobility.initialX = 157m
**.node[21].mobility.initialY = 60m


#Child of node[10]#11 (23)
#23
**.node[22].mobility.initialX = 156m
**.node[22].mobility.initialY = 29m


#Child of node[11]#12 (24,25)
#24
**.node[23].mobility.initialX = 138m
**.node[23].mobility.initialY = 8m

#25
**.node[24].mobility.initialX = 111m
**.node[24].mobility.initialY = 8m

#26
**.node[25].mobility.initialX = 130m
**.node[25].mobility.initialY = 2m




##########################################################
# 			Different Configurations     			     #	
##########################################################


[Config DMTS-Hopping-On-noise]
**.radioMediumType = "APSKScalarRadioMedium"
**.radioMedium.backgroundNoise.power = -110dBm
**.radioMedium.backgroundNoiseType = "ChannelMapBackgroundNoise"
#**.radioMedium.backgroundNoise.noiseMap = xml("XML/25NodesTdma/noise.xml")
**.radioType = "APSKScalarRadio"
**.radio.carrierFrequency = 2.412GHz
**.radioMedium.backgroundNoise.noiseMap = (xmldoc("XML/25NodesTdma/noise.xml"))
**.radio.bandwidth = 2MHz
**.radio.transmitter.power = 2mW
**.radio.transmitter.preambleDuration = 0s
**.radio.transmitter.headerBitLength = 100b
**.radio.receiver.sensitivity = -85dBm
**.radio.receiver.energyDetection = -85dBm
**.radio.receiver.snirThreshold = 4dB
**.frequentHopping = true
**.initialSeed = 11


[Config DMTS-Hopping-Off-noise]
**.radioMediumType = "APSKScalarRadioMedium"
**.radioMedium.backgroundNoise.power = -110dBm
**.radioMedium.backgroundNoiseType = "ChannelMapBackgroundNoise"
#**.radioMedium.backgroundNoise.noiseMap = xml("XML/25NodesTdma/noise.xml")
**.radioType = "APSKScalarRadio"
**.radio.carrierFrequency = 2.412GHz
**.radioMedium.backgroundNoise.noiseMap = (xmldoc("XML/25NodesTdma/noise.xml"))
**.radio.bandwidth = 2MHz
**.radio.transmitter.power = 2mW
**.radio.transmitter.preambleDuration = 0s
**.radio.transmitter.headerBitLength = 100b
**.radio.receiver.sensitivity = -85dBm
**.radio.receiver.energyDetection = -85dBm
**.radio.receiver.snirThreshold = 4dB
#**.frequentHopping = false
#**.initialSeed = -1




